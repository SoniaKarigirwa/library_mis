{
    "swagger": "2.0",
    "info": {
        "description": "A system that helps RTB to track the distribution of books to users \n\nMade by GitHub Copilot",
        "title": "Library Management System",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Sonia K",
            "email": "karigirwasonia0@gmail.com"
        },
        "version": "1.0.0"
    },
    "tags": [
        {
            "name": "USER OPERATIONS",
            "description": "Operations on users"
        },
        {
            "name": "BOOK-USER OPERATIONS",
            "description": "Operations on users' books"
        }
    ],
    "security": [
        {
            "Bearer": []
        }
    ],
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "bearerFormat": "JWT",
            "scheme": "bearer"
        }
    },
    "paths": {
        "/": {
            "post": {
                "tags": [
                    "USER OPERATIONS"
                ],
                "summary": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that needs to be added to the system",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "USER OPERATIONS"
                ],
                "summary": "Get user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/books": {
            "get": {
                "tags": [
                    "BOOK OPERATIONS"
                ],
                "summary": "Get All Books",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "type": "number"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/books/addBook": {
            "post": {
                "tags": [
                    "BOOK OPERATIONS"
                ],
                "summary": "Add book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Book object that needs to be added to the system",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "Book": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "publicationYear": {
                    "type": "integer"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}